<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bestmovies.sep6_project.dao.interfaces.IDirectorMapper">

    <resultMap id="DirectorResultMap" type="Director">
        <result property="id" column="id"/>
        <result property="name" column="name" javaType="java.lang.String"/>
        <result property="birthYear" column="birth" javaType="int"/>
        <collection property="movies" column="id"
                    select="com.bestmovies.sep6_project.dao.interfaces.IMovieMapper.getAllMoviesForDirector"/>
    </resultMap>
    <resultMap id="DirectorResultMapWithoutMovies" type="Director">
        <result property="id" column="id"/>
        <result property="name" column="name" javaType="java.lang.String"/>
        <result property="birthYear" column="birth" javaType="int"/>
    </resultMap>

    <select id="getAll" resultMap="DirectorResultMap">
        SELECT DISTINCT p.id AS id, p.name, p.birth
        FROM people p
                 JOIN directors d ON p.id = d.person_id
    </select>

    <select id="getDirectorById" resultMap="DirectorResultMap">
        SELECT p.id, p.name, p.birth
        FROM people p
                 LEFT JOIN directors d ON p.id = d.person_id
        WHERE d.person_id = #{id} LIMIT 1;
    </select>

    <select id="getDirectorsByBirth" resultMap="DirectorResultMap">
        SELECT DISTINCT p.id, p.name, p.birth
        FROM people p
                 LEFT JOIN directors d ON p.id = d.person_id
        WHERE p.birth = #{birth}
          AND d.person_id IS NOT NULL;
    </select>

    <select id="getByMovieId" resultMap="DirectorResultMapWithoutMovies">
        SELECT p.id as id, p.name, p.birth
        FROM people p
                 JOIN directors d ON p.id = d.person_id
                 JOIN movies m ON d.movie_id = m.id
        WHERE m.id = #{movieId};
    </select>

    <select id="getDirectorsByName" resultMap="DirectorResultMapWithoutMovies">
        SELECT p.id as id, p.name, p.birth
        FROM people p
                 JOIN directors d ON p.id = d.person_id
        WHERE p.name LIKE CONCAT('%', #{name}, '%') LIMIT 10;
    </select>

    <select id="getNDirectorsByPage" resultMap="DirectorResultMapWithoutMovies">
        SELECT DISTINCT p.id AS id, p.name, p.birth
        FROM people p
                 JOIN directors d ON p.id = d.person_id
        ORDER BY id
            LIMIT ${(pageNum - 1) * limit}, #{limit}
    </select>

    <insert id="createDirector" parameterType="Director" useGeneratedKeys='true' keyProperty='id'>
        INSERT INTO people (name, birth)
        VALUES (#{name}, #{birthYear});
    </insert>

    <insert id="addMovieDirector" parameterType="Director">
        INSERT INTO directors (movie_id, person_id)
        VALUES (#{addMovie.id}, #{id});
    </insert>

    <update id="updateDirector" parameterType="Director">
        UPDATE people
        SET name  = #{name},
            birth = #{birthYear}
        WHERE id = #{id};
    </update>

    <delete id="deleteDirector" parameterType="long">
        DELETE
        FROM people
        WHERE id = #{id}
    </delete>
</mapper>
